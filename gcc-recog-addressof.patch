2001-02-27  Jakub Jelinek  <jakub@redhat.com>

	* genrecog.c (preds): Add ADDRESSOF where appropriate.

	* gcc.c-torture/compile/20010227-1.c: New test.

--- gcc/genrecog.c.jj	Wed Jan 17 13:36:10 2001
+++ gcc/genrecog.c	Tue Feb 27 14:20:28 2001
@@ -186,20 +186,21 @@ static struct pred_table
   RTX_CODE codes[NUM_RTX_CODE];
 } preds[] = {
   {"general_operand", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,
-		       LABEL_REF, SUBREG, REG, MEM}},
+		       LABEL_REF, SUBREG, REG, MEM, ADDRESSOF}},
 #ifdef PREDICATE_CODES
   PREDICATE_CODES
 #endif
   {"address_operand", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,
-		       LABEL_REF, SUBREG, REG, MEM, PLUS, MINUS, MULT}},
-  {"register_operand", {SUBREG, REG}},
-  {"pmode_register_operand", {SUBREG, REG}},
+		       LABEL_REF, SUBREG, REG, MEM, PLUS, MINUS, MULT,
+		       ADDRESSOF}},
+  {"register_operand", {SUBREG, REG, ADDRESSOF}},
+  {"pmode_register_operand", {SUBREG, REG, ADDRESSOF}},
   {"scratch_operand", {SCRATCH, REG}},
   {"immediate_operand", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,
 			 LABEL_REF}},
   {"const_int_operand", {CONST_INT}},
   {"const_double_operand", {CONST_INT, CONST_DOUBLE}},
-  {"nonimmediate_operand", {SUBREG, REG, MEM}},
+  {"nonimmediate_operand", {SUBREG, REG, MEM, ADDRESSOF}},
   {"nonmemory_operand", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,
 			 LABEL_REF, SUBREG, REG}},
   {"push_operand", {MEM}},
@@ -210,7 +211,7 @@ static struct pred_table
 			   UNORDERED, ORDERED, UNEQ, UNGE, UNGT, UNLE,
 			   UNLT, LTGT}},
   {"mode_independent_operand", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,
-				LABEL_REF, SUBREG, REG, MEM}}
+				LABEL_REF, SUBREG, REG, MEM, ADDRESSOF}}
 };
 
 #define NUM_KNOWN_PREDS (sizeof preds / sizeof preds[0])
--- gcc/testsuite/gcc.c-torture/compile/20010227-1.c.jj	Tue Feb 27 16:46:31 2001
+++ gcc/testsuite/gcc.c-torture/compile/20010227-1.c	Tue Feb 27 13:23:46 2001
@@ -0,0 +1,6 @@
+void foo (void)
+{
+  double a = 0.0;
+  double b = a;
+  if (&b != &a);
+}
