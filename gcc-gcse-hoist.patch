2000-11-21  Diego Novillo  <dnovillo@redhat.com>

	* gcse.c (hoist_expr_reaches_here_p): Do not mark expr_bb as
	visited before visiting it.

2001-08-22  Jakub Jelinek  <jakub@redhat.com>

	* gcc.dg/20010822-1.c: New test.

--- gcc/gcse.c.jj	Mon Aug 20 22:27:03 2001
+++ gcc/gcse.c	Wed Aug 22 16:29:25 2001
@@ -5309,7 +5309,6 @@ hoist_expr_reaches_here_p (expr_bb, expr
        visited = xcalloc (n_basic_blocks, 1);
     }
 
-  visited[expr_bb] = 1;
   for (pred = BASIC_BLOCK (bb)->pred; pred != NULL; pred = pred->pred_next)
     {
       int pred_bb = pred->src->index;
--- gcc/testsuite/gcc.dg/20010822-1.c.jj	Wed Aug 22 16:37:31 2001
+++ gcc/testsuite/gcc.dg/20010822-1.c	Wed Aug 22 16:38:02 2001
@@ -0,0 +1,44 @@
+/* { dg-do run } */
+/* { dg-options "-Os" } */
+
+extern void abort (void);
+
+void foo (unsigned long x)
+{
+}
+
+typedef struct a {
+  volatile unsigned int a1, a2, a3, a4, a5;
+} *A;
+typedef struct {
+  volatile unsigned int b1, b2, b3, b4, b5;
+} *B;
+struct C {
+  void *c1, *c2;
+  A c3;
+  unsigned char c4;
+};
+
+void
+bar (struct C *c, unsigned int *d)
+{
+  *d = *d | 1;
+  ((c->c4 >= 2)
+   ? (*(volatile unsigned int *) ((void *)(&((A)c->c3)->a5)) = *d)
+   : (*(volatile unsigned int *) ((void *)(&((B)c->c3)->b5)) = *d));
+
+  foo (50);
+}
+
+int main (void)
+{
+  struct a a;
+  struct C c;
+  unsigned int d = 8;
+  c.c3 = &a;
+  c.c4 = 0;
+  bar (&c, &d);
+  if (a.a5 != 9)
+    abort ();
+  return 0;
+}
