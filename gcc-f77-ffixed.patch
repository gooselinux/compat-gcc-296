2001-07-19  Jakub Jelinek  <jakub@redhat.com>

	* top.c (ffe_decode_option): Disallow lang-independent processing
	for -ffixed-form.

2001-04-19  Mark Mitchell  <mark@codesourcery.com>

	* toplev.h (struct lang_hooks): Allow decode_option to indicate
	that language-independent processing should not be done.
	* toplev.c (main): Adjust accordingly.

	* top.c (ffe_decode_option): Do not permit language-independent
	processing for -ffixed-line-length.

--- gcc/f/top.c.jj	Wed Jun 13 16:38:07 2001
+++ gcc/f/top.c	Thu Jul 19 21:10:37 2001
@@ -1,5 +1,5 @@
 /* top.c -- Implementation File (module.c template V1.0)
-   Copyright (C) 1995, 1996, 1997, 1999 Free Software Foundation, Inc.
+   Copyright (C) 1995, 1996, 1997, 1999, 2001 Free Software Foundation, Inc.
    Contributed by James Craig Burley.
 
 This file is part of GNU Fortran.
@@ -225,7 +225,10 @@ ffe_decode_option (argc, argv)
       else if (strcmp (&opt[2], "no-free-form") == 0)
 	ffe_set_is_free_form (FALSE);
       else if (strcmp (&opt[2], "fixed-form") == 0)
-	ffe_set_is_free_form (FALSE);
+	{
+	  ffe_set_is_free_form (FALSE);
+	  return -1;
+	}
       else if (strcmp (&opt[2], "no-fixed-form") == 0)
 	ffe_set_is_free_form (TRUE);
       else if (strcmp (&opt[2], "pedantic") == 0)
@@ -464,9 +467,15 @@ ffe_decode_option (argc, argv)
 	  char *len = &opt[2] + strlen ("fixed-line-length-");
 
 	  if (strcmp (len, "none") == 0)
-	    ffe_set_fixed_line_length (0);
+	    {
+	      ffe_set_fixed_line_length (0);
+	      return -1;
+	    }
 	  else if (ffe_is_digit_string_ (len))
-	    ffe_set_fixed_line_length (atol (len));
+	    {
+	      ffe_set_fixed_line_length (atol (len));
+	      return -1;
+	    }
 	  else
 	    return 0;
 	}
--- gcc/toplev.c.jj	Wed Jun 13 16:38:37 2001
+++ gcc/toplev.c	Thu Jul 19 21:05:50 2001
@@ -4588,20 +4588,26 @@ main (argc, argv)
   /* Perform normal command line switch decoding.  */
   for (i = 1; i < argc;)
     {
-      unsigned int lang_processed;
+      int lang_processed;
       unsigned int indep_processed;
 
       /* Give the language a chance to decode the option for itself.  */
       lang_processed = lang_decode_option (argc - i, argv + i);
 
-      /* Now see if the option also has a language independent meaning.
-	 Some options are both language specific and language independent,
-	 eg --help.  It is possible that there might be options that should
-	 only be decoded in a language independent way if they were not
-	 decoded in a language specific way, which is why 'lang_processed'
-	 is passed in.  */
-      indep_processed = independent_decode_option (argc - i, argv + i,
-						   lang_processed);
+      if (lang_processed >= 0)
+	/* Now see if the option also has a language independent meaning.
+	   Some options are both language specific and language independent,
+	   eg --help.  It is possible that there might be options that should
+	   only be decoded in a language independent way if they were not
+	   decoded in a language specific way, which is why 'lang_processed'
+	   is passed in.  */
+	indep_processed = independent_decode_option (argc - i, argv + i,
+						     lang_processed);
+      else
+	{
+	  lang_processed = -lang_processed;
+	  indep_processed = 0;
+	}
 
       if (lang_processed || indep_processed)
 	i += (lang_processed > indep_processed
