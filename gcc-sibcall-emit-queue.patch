2000-11-30  Richard Henderson  <rth@redhat.com>

	* calls.c (expand_call): Emit queued insns before creating
	the tail recursion sequence.

	* gcc.c-torture/execute/20001130-1.c: New test.

--- gcc/calls.c.jj	Wed Nov 29 12:54:10 2000
+++ gcc/calls.c	Thu Nov 30 22:49:42 2000
@@ -2542,6 +2542,10 @@ expand_call (exp, target, ignore)
       int save_pending_stack_adjust = pending_stack_adjust;
       int save_stack_pointer_delta = stack_pointer_delta;
 
+      /* Emit any queued insns now; otherwise they would end up in
+	 only one of the alternates.  */
+      emit_queue ();
+
       /* Use a new sequence to hold any RTL we generate.  We do not even
 	 know if we will use this RTL yet.  The final decision can not be
 	 made until after RTL generation for the entire function is
--- gcc/testsuite/gcc.c-torture/execute/20001130-1.c.jj	Thu Nov 30 22:52:10 2000
+++ gcc/testsuite/gcc.c-torture/execute/20001130-1.c	Thu Nov 30 22:52:03 2000
@@ -0,0 +1,21 @@
+static inline int bar(void) { return 1; }
+static int mem[3];
+   
+static int foo(int x)
+{
+  if (x != 0)
+    return x;
+
+  mem[x++] = foo(bar());
+
+  if (x != 1)
+    abort();
+
+  return 0;
+}
+   
+int main()
+{
+  foo(0);
+  return 0;
+}
